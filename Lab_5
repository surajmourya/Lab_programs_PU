#include <stdio.h>
#include <stdbool.h>
#include <limits.h>
#define MAX_SIZE 100
struct Stack {
int arr[MAX_SIZE];
int top;
};
// Initialize stack
void initializeStack(struct Stack *st) {
st->top = -1;
}
// Check if stack is empty
bool isEmpty(struct Stack *st) {
return st->top == -1;
}
// Push element onto stack
void push(struct Stack *st, int value) {
if (st->top < MAX_SIZE - 1) {
st->top++;
st->arr[st->top] = value;
}
}
// Pop element from stack
int pop(struct Stack *st) {
if (!isEmpty(st)) {
int value = st->arr[st->top];
st->top--;
return value;
}
return -1; // Return -1 to indicate an empty stack
}


void nextSmallerElement(int *arr, int *ans, int n) {

// Write the code
}



int main() {
int heights[] = {2, 1, 5, 6, 2, 3};
int n = sizeof(heights) / sizeof(heights[0]);
printf("Largest Area: %d\n", largestRectangleArea(heights, n));
return 0;
}
