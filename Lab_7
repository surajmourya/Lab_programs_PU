#include <stdio.h>
#include <stdlib.h>
// Definition for singly-linked list.
struct node {
int val;
struct node* next;
};
struct node* mergeTwoLists(struct node* l1, struct node* l2) {

// write your code here

}

// Helper function to create a new node with a given value
struct node* createNode(int value) {
struct node* newNode = (struct node*)malloc(sizeof(struct node));
newNode->val = value;
newNode->next = NULL;
return newNode;
}

// Helper function to print the linked list
void printList(struct node* head) {
struct node* current = head;
while (current != NULL) {
printf("%d -> ", current->val);
current = current->next;
}
printf("NULL\n");
}
int main() {
// Create two sorted linked lists
struct node* l1 = createNode(1);
l1->next = createNode(2);
l1->next->next = createNode(4);
struct node* l2 = createNode(1);
l2->next = createNode(3);
l2->next->next = createNode(4);
printf("List 1: ");
printList(l1);
printf("List 2: ");
printList(l2);
// Merge the two lists
struct node* mergedList = mergeTwoLists(l1, l2);
printf("Merged List: ");
printList(mergedList);
return 0;
}
